% Generated by roxygen2 (4.0.2): do not edit by hand
\name{d3net}
\alias{d3net}
\alias{d3net.default}
\alias{d3net.igraph}
\alias{d3net.network}
\alias{d3net.networkDynamic}
\title{Launching d3net Shiny apps}
\usage{
d3net(dataset, ...)

\method{d3net}{default}(dataset, ...)

\method{d3net}{igraph}(dataset, ...)

\method{d3net}{network}(dataset, ...)

\method{d3net}{networkDynamic}(dataset, ...)
}
\arguments{
\item{dataset}{R object containing (dynamic) network data. See Usage and Details
for description of available methods.}

\item{...}{other arguments passed to/from other methods}
}
\description{
Launch a Shiny application providing an interactive visualisation of static
or dynamic network data.
}
\details{
Generic details first.

d3js-specific

Graph layout has some predefined properties that can be changed
through the controls in the app.  See sections below for more information.
To launch the shiny app use functions described below.

TODO describe all d3 properties in detail.

Link distance, charge and vertex size are calculated depending on total
number of nodes.

# how R vertex/edge attributes are handled

Vertices and edges properties of the visualised object can be reflected as
well.  Controls in \code{R properties} section enable this.  Logical and
character network's vertices properties can be reflected by color nodes,
numeric ones by the size of the node. Edge properties can be reflected by
edge thickness.  All of the available properties may be added to the tooltip
information, which is shown on node mouseover.

(TODO: Describe the static application)

If \code{dataset} is of class "network", it is converted to "igraph" object
using \code{\link[intergraph]{asIgraph}}.

(TODO: Describe dynamic application)

For dynamic visualisations, user may also set the time interval between each
timepoint.  It is by default 3000ms (3s). To play with the visualisation,
use the controls below the graph.  It is also possible to pause a
visualisation and freeze the graph by pressing spacebar.
}
\note{
(TODO non-usage-specific notes, e.g. performance etc.)

For visualisations with large number of vertices, nodes size can be pretty
small.  For this reason, there is a zooming control that lets you change the
scale.  You can also move the whole graph in every direction.  As gestures
may be interferring with the dragging, it's not possible to drag the nodes
when zooming is on.
}
\examples{
\dontrun{
# static network of class 'igraph'
data(karate, package="igraphdata")
d3net(karate)

# static network 2
data(flo, package="network")
g <- graph.adjacency(flo, mode="directed")
d3net(g)

# dynamic network
data(harry_potter_support, package="networkDynamicData")
d3net(harry_potter_support)
}
}

